name: "Terraform"

on:
  pull_request_target:
    types:
      - opened
      - synchronize

  workflow_dispatch:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
    steps:
      - name: Checkout Forked Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Check AWS Identity
        run: aws sts get-caller-identity
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.2
      
      - name: Terraform Format
        id: fmt
        run: make fmt

      - name: Terraform Init
        id: init
        run: make init
      
      - name: Terraform Validate
        id: validate
        run: make validate
      
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request_target'
        run: make plan
        continue-on-error: true
      
      - name: Terraform Apply
        id: apply
        if: github.event_name == 'pull_request_target'
        run: make apply
      
      - name: Terraform Verify
        id: verify
        if: github.event_name == 'pull_request_target'
        run: make verify

      - name: Fetch PR Author Details
        id: fetch-author
        run: |
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/users/${{ github.event.pull_request.user.login }} > author.json
          echo "::set-output name=username::$(jq -r .login author.json)"
          echo "::set-output name=full_name::$(jq -r .name author.json)"

      - name: Notify Slack
        id: notify-slack
        run: |
          make notify-slack SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }} STATUS=success \
            USERNAME=${{ steps.fetch-author.outputs.username }} \
            FULL_NAME="${{ steps.fetch-author.outputs.full_name }}"